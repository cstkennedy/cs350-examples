buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "java"
    id "application"
    id "eclipse"

    id "checkstyle"
    id "com.github.spotbugs" version "6.2.1"
    id "project-report"
    id "jacoco"
    id "pmd"
}

java {
    sourceCompatibility = JavaVersion.toVersion(8)
    targetCompatibility = JavaVersion.toVersion(8)
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-library:1.3"

    implementation "junit:junit:4.12"
    implementation "org.hamcrest:hamcrest-library:1.3"
}

jar {
    archiveBaseName = "JUnitCoreDemo"

    manifest {
        attributes(
            "Main-Class": "edu.odu.cs.cs350.examples.JUnitCoreDemo"
        )
    }
}

run {
    main = "edu.odu.cs.cs350.examples.JUnitCoreDemo"
    args = ["src/main/resources/testProgram2/",
            "edu.odu.cs.cs350.examples.numbers.PrimeGenerator",
            "src/main/resources/testProgram2/",
            "edu.odu.cs.cs350.examples.numbers.TestPrimeGenerator"]
}

application {
    mainClass = "edu.odu.cs.cs350.examples.JUnitCoreDemo"
}

javadoc {
    failOnError = false
}

//------------------------------------------------------------------------------
// Analysis Tools
//------------------------------------------------------------------------------

// SpotBugs
spotbugs {
    toolVersion = "4.9.3"
}

spotbugsMain {
    ignoreFailures = true
    effort = com.github.spotbugs.snom.Effort.MAX
    reportLevel = com.github.spotbugs.snom.Confidence.values()[1] // Medium
    reports {
       xml.required = false
       html.required = true
    }
}

spotbugsTest.enabled = false
// End SpotBugs config

pmd {
    toolVersion = "7.0.0"

    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}

// Check Style Config
checkstyle {
    toolVersion = "10.12.4"
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle) {
    reports {
        html.outputLocation = project.file("build/reports/checkstyle/main.html")
    }
}
checkstyleTest.enabled = false
// End Checkstyle config

pmd {
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}
