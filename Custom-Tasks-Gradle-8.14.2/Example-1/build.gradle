buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "java"
    id "jvm-test-suite"

    id "jacoco"
    id "jacoco-report-aggregation"

    id "com.github.spotbugs" version "6.2.1"
    id "pmd"
}

java {
    sourceCompatibility = JavaVersion.toVersion(17)
    targetCompatibility = JavaVersion.toVersion(17)
}

repositories {
    mavenCentral()
}

dependencies {
    // Production dependencies
    // implementation ...

    // Test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
}

testing {
    suites {
        configureEach {
            useJUnitJupiter()

            dependencies {
                implementation project()
                implementation "org.junit.jupiter:junit-jupiter:5.8.2"
                implementation "org.hamcrest:hamcrest-library:2.2"
            }
        }

        test {
            // Configure each now handles all of our setup
        }

        integrationTest(JvmTestSuite) {
            targets {
                all {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }
    }
}

test {
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    finalizedBy jacocoTestReport
}

integrationTest {
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    finalizedBy integrationTestCodeCoverageReport
}


// Update "check" task to include integration test set
tasks.named("check") {
    dependsOn(testing.suites.integrationTest)
}

//------------------------------------------------------------------------------
// Documentation Tool(s)
//------------------------------------------------------------------------------
javadoc {
    failOnError = false
}

//------------------------------------------------------------------------------
// Analysis Tool(s)
//------------------------------------------------------------------------------
jacoco {
    toolVersion = "0.8.13"
}

jacocoTestReport {
    reports {
        html.required = true
    }
}


// ----SpotBugs----
spotbugs {
    toolVersion = "4.9.3"
}

spotbugsMain {
    ignoreFailures = true
    effort = com.github.spotbugs.snom.Effort.MAX
    reportLevel = com.github.spotbugs.snom.Confidence.values()[1] // Medium
    reports {
       html.required = true
       xml.required = false
    }
}

spotbugsTest {
    enabled = false
}

spotbugsIntegrationTest {
    enabled = false
}

// ----PMD----
pmd {
    toolVersion = "7.0.0"

    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}

pmdTest {
    enabled = false
}

pmdIntegrationTest {
    enabled = false
}

//------------------------------------------------------------------------------
// Custom Tasks
//------------------------------------------------------------------------------
def customTaskGroup = "Custom"

tasks.register("tests") {
    group = customTaskGroup
    description "Runs all test suites and generates HTML reports"

    dependsOn("test")
    dependsOn("integrationTest")
}

tasks.register("coverage") {
    group = customTaskGroup
    description "Generate HTML test coverage reports"

    dependsOn("tests")
}

tasks.register("hygiene") {
    group = customTaskGroup
    description "Run all code analysis, formatting, and linting tools"

    dependsOn("pmdMain")
    dependsOn("spotbugsMain")
}


















