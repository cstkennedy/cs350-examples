buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // Add ShadowJar
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.3"
    }
}

plugins {
    id "org.hidetake.ssh" version "2.1.1"
    id "com.github.johnrengelman.shadow" version "5.2.0"

    id "java"
    id "eclipse"

    id "project-report"

    id "jacoco"

    id "pmd"
    id "com.github.spotbugs" version "4.6.2"
    id "checkstyle"
    id "application"

}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "nz.ac.waikato.cms.weka:weka-stable:3.8.2"

    testImplementation "junit:junit:4.12"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
}


// Set main class name
//mainClassName = "edu.odu.cs.cs350.examples.weka.BasicWeka1"

run {
    main = "edu.odu.cs.cs350.examples.weka.BasicWeka1"
}

application {
    mainClass = "edu.odu.cs.cs350.examples.weka.BasicWeka1"
}

jar {
    baseName = "WekaExamples"

    manifest {
        attributes(
          "Main-Class": "edu.odu.cs.cs350.examples.weka.BasicWeka1"
        )
    }
}

shadowJar {
    configurations = [project.configurations.implementation]
}

build.dependsOn shadowJar

test {
    reports {
        html.enabled = true
    }
    ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

javadoc {
    failOnError false
}

/**
 * Run code style/error checks
 */
spotbugsMain {
    ignoreFailures true
    effort = 'max'
    reportLevel = 'medium'
    reports {
        xml.enabled false
        html.enabled true
    }
}

// Add out of curiosity
spotbugsTest {
    ignoreFailures true
    reports {
        xml.enabled false
        html.enabled true
    }
}

pmd {
    ignoreFailures = true
    ruleSets = [
        "category/java/bestpractices.xml",
        "category/java/codestyle.xml",
        "category/java/design.xml",
        "category/java/errorprone.xml",
        "category/java/performance.xml"
    ]
}

// SpotBugs
spotbugsMain {
    ignoreFailures = true
    effort = "max"
    reportLevel = "medium"
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false
// End SpotBugs config

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

checkstyle {
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle) {
    reports {
        html.destination project.file("build/reports/checkstyle/main.html")
    }
}
checkstyleTest.enabled = false
